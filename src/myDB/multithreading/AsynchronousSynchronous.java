package myDB.multithreading;

public class AsynchronousSynchronous {
    /*
     * Synchronous - в синхронном программировании мы не можем приступить к выполнению
     * следующей задачи до тех пор, пока не сделали текущую.
     * Например: нам нужно написать два письма, мы не сможем написать их одновременно, т.к.
     * рука занята написанием первого письма и сможет приступить ко второму после окончания
     * работы над первым.
     *
     * Asynchronous - в асинхронном программировании мы выполняем задачи одновременно.
     * Например: нужно постирать шмотки и сделать бутер. Мы закинем вещи в стиралку и пойдем
     * делать свой бутер, т.е. переключаемся на другую задачу не дожидаясь окончания стирки.
     *
     * Asynchronous программирование помогает нам достичь concurrency, а Asynchronous
     * программирование на многоядерном процессоре помогает нам достичь parallelism.
     *
     * Когда мы запускаем два дополнительных потока как в примере SleepJoin.java, у нас не
     * предсказуемый аутпут, мы не знаем какой поток первым выведет элемент, такое поведение
     * потоков называется НЕДЕТЕРМИНИРОВАННЫМ
     * (потому что потоки выполняют работу не зависимо друг от друга)
     *
     * В ПРОГРАММАХ ГДЕ ИСПОЛЬЗУЕТСЯ ASYNCHRONOUS ПРОГРАММИРОВАНИЕ ПРОГРАММИСТ ЗАРАНЕЕ НЕ МОЖЕТ
     * ЗАРАНЕЕ ОПРЕДЕЛИТЬ ПОРЯДОК ВЫПОЛНЕНИЯ ПОТОКОВ!!!
     *
     * */
}
